1 - 
Safe Empty State is a situation where the object data members are set to predetermined values
that represent that the object is empty/not valid. These values are encapsulated inside 
the object, thus they are invisible from the outside. With the use of Safe Empty State 
programers can control if the object is valid or not, therefore they can develop member 
functions to respond accordingly and avoid undesired behaviours from the outside software.

2 - 
I created two function named 'isValidName()' and 'isValidDestiny()' that were used to check
if name and destination were valid during the constructor execution. I also used the
default date '2017/7/1' in the two argument constructor to reuse the 
five argument constructor like Passenger(name, destiny, 2017, 7, 1);

3 - 
In this situation we have two different objects, the Passenger passed as parameter and the 
current 'this' object. We can access both objects data members because both are objects 
of the same Passenger Class and the code was inside a Passenger class member function. 
The access to data members is class based and not exclusive to an object.

4 -
I believe you are talking about the third parameter of strncpy that means 
the size of the string we want to copy. 
The format is strncpy(char *string1, char *string2, int size);

5 - 
I learned what is Safe Empty State, I learned how to create my own member functions and
that encapsulation of objects allow you to access private data of objects, from 
different objects of the same class. Most important, I learned that objects must be
created in a way that they are completely safe to use from the outside.